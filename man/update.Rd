% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/MarxanData.R, R/MarxanOpts.R, R/MarxanUnsolved.R, R/MarxanSolved.R
\name{update}
\alias{update}
\alias{update.MarxanData}
\alias{update.MarxanOpts}
\alias{update.MarxanSolved}
\alias{update.MarxanUnsolved}
\title{Update Marxan inputs}
\usage{
update.MarxanData(x, formula, force_reset = TRUE)

update.MarxanOpts(x, formula)

update.MarxanUnsolved(x, formula, solve = TRUE, force_reset = TRUE)

update.MarxanSolved(x, formula, solve = TRUE, force_reset = TRUE)
}
\arguments{
\item{x}{"MarxanOpts", "MarxanData", "MarxanUnsolved", or "MarxanSolved" object.}

\item{formula}{"formula" with update commands (see examples).}

\item{force_reset}{"logical" ignore data in cache? Setting this as ignore will make function slower but may avoid bugs in cache system.}

\item{solve}{"logical" should solutions be generated for the new object?}
}
\value{
"MarxanSolved" or "MarxanUnsolved" object depending on solve argument.
}
\description{
This function lets you update Marxan objects to obtain a new object with altered inputs. This is particularly useful if you want to rerun a Marxan
analysis but after changing a few parameters. For example, you might decide that you need to rerun a Marxan analysis with a higher number of iterations, or with a different
boundary length modifier. In effect, this lets you take an existing "MarxanUnsolved"/"MarxanSolved" object, change specific inputs, and run a Marxan analysis using the tweaked inputs.
}
\seealso{
\code{\link{MarxanSolved-class}}, \code{\link{MarxanUnsolved-class}}, \code{\link{marxan}}, \code{\link{opt}}, \code{\link{spp}}, \code{\link{pu}}
}

